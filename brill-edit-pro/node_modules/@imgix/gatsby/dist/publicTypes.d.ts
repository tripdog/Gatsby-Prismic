import imgixUrlParameters from 'imgix-url-params/dist/parameters.json';
import * as t from './common/ioTs';
export declare enum ImgixSourceType {
    AmazonS3 = "s3",
    GoogleCloudStorage = "gcs",
    MicrosoftAzure = "azure",
    WebFolder = "webFolder",
    WebProxy = "webProxy"
}
declare type IImgixParamsKey = keyof ImgixUrlParametersSpec['parameters'] | keyof ImgixUrlParametersSpec['aliases'];
declare const ImgixParamsIOTS: t.PartialC<{
    trim: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    auto: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    fill: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blend: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    faces: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    crop: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    hue: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    border: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    dpr: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    palette: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mask: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    duotone: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blur: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    fit: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    h: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    transparency: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    invert: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mark: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    monochrome: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txt: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    usm: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-align": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-alpha": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-color": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-crop": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-fit": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-h": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-mode": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-pad": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-size": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-w": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-x": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-y": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "fill-color": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-align": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-alpha": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-base": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-fit": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-h": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-pad": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-scale": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-tile": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-w": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-x": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-y": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mask-bg": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "max-h": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "max-w": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "min-h": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "min-w": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    orient: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "pdf-annotation": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "trim-color": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "trim-md": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "trim-pad": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "trim-sd": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "trim-tol": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-align": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-clip": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-color": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-fit": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-font": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-lead": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-lig": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-line-color": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-line": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-pad": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-shad": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-size": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-track": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-width": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    w: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    ar: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bg: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "border-bottom": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "border-left": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "border-radius-inner": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "border-radius": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "border-right": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "border-top": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bri: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    ch: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    chromasub: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    colorquant: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    colors: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    con: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "corner-radius": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    cs: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    dl: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    dpi: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "duotone-alpha": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    exp: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    expires: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    faceindex: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    facepad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    flip: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    fm: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "fp-debug": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "fp-x": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "fp-y": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "fp-z": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    gam: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "grid-colors": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "grid-size": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    high: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    htn: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    lossless: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "mark-rot": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    nr: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    nrs: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "pad-bottom": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "pad-left": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "pad-right": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "pad-top": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    pad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    page: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    prefix: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    px: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    q: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    rect: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    rot: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    sat: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    sepia: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    shad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    sharp: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    usmrad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    vib: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendalign: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    ba: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendalpha: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    balph: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendcolor: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "blend-clr": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendclr: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendcrop: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bc: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendfit: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bf: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendh: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bh: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendmode: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bm: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendpad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bp: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendsize: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bs: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendw: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bw: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendx: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    bx: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    blendy: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    by: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    b: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    width: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    fillcolor: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    f: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    height: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    inv: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    ma: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markalign: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markalpha: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    malph: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mb: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markbase: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mf: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markfit: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markw: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markh: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mh: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mp: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markpad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    ms: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markscale: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mtile: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    marktile: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mw: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mx: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    markx: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    my: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    marky: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    m: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    maskbg: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "max-height": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "max-width": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "min-height": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "min-width": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    mono: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    or: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    annotation: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    trimcolor: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    trimmd: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    trimpad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    trimsd: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    trimtol: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtalign: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    ta: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtclip: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tcl: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtcolor: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-clr": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtclr: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tc: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtfit: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tf: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtfont: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtlead: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtlig: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtlinecolor: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    "txt-line-clr": t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtlineclr: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtline: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tl: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtpad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tp: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtshad: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tsh: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tsz: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtsize: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txttrack: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    tt: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    txtwidth: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
    t: t.UnionC<[t.StringC, t.NumberC, t.BooleanC, t.UndefinedC, t.NullC, t.ArrayC<t.StringC>, t.ArrayC<t.NumberC>, t.ArrayC<t.BooleanC>]>;
}>;
export declare type IImgixParams = t.TypeOf<typeof ImgixParamsIOTS>;
export interface IBaseFieldOptions {
    nodeType: string;
    fieldName: string;
}
export interface IFieldOptionsSingleUrl extends IBaseFieldOptions {
    getUrl: (node: Node) => string;
}
export interface IFieldOptionsMultipleUrls extends IBaseFieldOptions {
    getUrls: (node: Node) => string;
}
export declare const ImgixGatsbyFieldMultipleUrlsIOTS: t.IntersectionC<[t.TypeC<{
    nodeType: t.StringC;
    fieldName: t.StringC;
}>, t.TypeC<{
    getURLs: t.FunctionC;
}>]>;
export declare const ImgixGatsbyFieldSingleUrlIOTS: t.IntersectionC<[t.TypeC<{
    nodeType: t.StringC;
    fieldName: t.StringC;
}>, t.TypeC<{
    getURL: t.FunctionC;
}>]>;
export declare const ImgixGatsbyFieldsIOTS: t.ArrayC<t.UnionC<[t.IntersectionC<[t.TypeC<{
    nodeType: t.StringC;
    fieldName: t.StringC;
}>, t.TypeC<{
    getURL: t.FunctionC;
}>]>, t.IntersectionC<[t.TypeC<{
    nodeType: t.StringC;
    fieldName: t.StringC;
}>, t.TypeC<{
    getURLs: t.FunctionC;
}>]>]>>;
export declare type IFieldsOption = t.TypeOf<typeof ImgixGatsbyFieldsIOTS>;
export declare const ImgixGatsbyOptionsIOTS: t.Type<Omit<{
    domain: string;
    defaultImgixParams: {
        trim?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        auto?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fill?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blend?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        faces?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        crop?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        hue?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        border?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dpr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        palette?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mask?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        duotone?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blur?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        h?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        transparency?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        invert?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mark?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        monochrome?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txt?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        usm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-crop"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-mode"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fill-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-base"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-scale"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-tile"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mask-bg"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        orient?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pdf-annotation"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-md"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-sd"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-tol"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-clip"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-font"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-lead"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-lig"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-shad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-track"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        w?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ar?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bg?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-bottom"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-left"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-radius-inner"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-radius"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-right"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-top"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bri?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ch?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        chromasub?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        colorquant?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        colors?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        con?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "corner-radius"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        cs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dpi?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "duotone-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        exp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        expires?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        faceindex?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        facepad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        flip?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-debug"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-z"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        gam?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "grid-colors"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "grid-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        high?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        htn?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        lossless?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-rot"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        nr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        nrs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-bottom"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-left"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-right"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-top"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        pad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        page?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        prefix?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        px?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        q?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        rect?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        rot?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sat?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sepia?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        shad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sharp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        usmrad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        vib?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ba?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendalpha?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        balph?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendcrop?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bc?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendmode?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendsize?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendy?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        by?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        b?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        width?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fillcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        f?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        height?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        inv?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ma?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markalpha?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        malph?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mb?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markbase?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ms?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markscale?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mtile?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        marktile?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        my?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        marky?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        m?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        maskbg?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-height"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-height"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mono?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        or?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        annotation?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimmd?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimsd?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimtol?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ta?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtclip?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tcl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tc?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtfont?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlead?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlig?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlinecolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlineclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtline?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtshad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tsh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tsz?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtsize?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txttrack?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tt?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtwidth?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        t?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
    } | undefined;
    disableIxlibParam: boolean | undefined;
    secureURLToken: string | undefined;
    sourceType: ImgixSourceType | undefined;
    fields: (({
        nodeType: string;
        fieldName: string;
    } & {
        getURL: Function;
    }) | ({
        nodeType: string;
        fieldName: string;
    } & {
        getURLs: Function;
    }))[] | undefined;
}, "defaultImgixParams" | "disableIxlibParam" | "secureURLToken" | "sourceType" | "fields"> & Partial<{
    domain: string;
    defaultImgixParams: {
        trim?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        auto?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fill?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blend?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        faces?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        crop?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        hue?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        border?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dpr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        palette?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mask?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        duotone?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blur?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        h?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        transparency?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        invert?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mark?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        monochrome?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txt?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        usm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-crop"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-mode"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fill-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-base"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-scale"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-tile"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mask-bg"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        orient?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pdf-annotation"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-md"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-sd"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-tol"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-clip"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-font"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-lead"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-lig"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-shad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-track"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        w?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ar?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bg?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-bottom"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-left"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-radius-inner"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-radius"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-right"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-top"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bri?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ch?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        chromasub?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        colorquant?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        colors?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        con?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "corner-radius"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        cs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dpi?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "duotone-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        exp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        expires?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        faceindex?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        facepad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        flip?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-debug"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-z"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        gam?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "grid-colors"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "grid-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        high?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        htn?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        lossless?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-rot"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        nr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        nrs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-bottom"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-left"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-right"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-top"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        pad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        page?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        prefix?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        px?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        q?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        rect?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        rot?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sat?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sepia?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        shad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sharp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        usmrad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        vib?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ba?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendalpha?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        balph?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendcrop?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bc?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendmode?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendsize?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendy?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        by?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        b?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        width?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fillcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        f?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        height?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        inv?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ma?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markalpha?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        malph?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mb?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markbase?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ms?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markscale?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mtile?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        marktile?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        my?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        marky?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        m?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        maskbg?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-height"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-height"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mono?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        or?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        annotation?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimmd?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimsd?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimtol?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ta?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtclip?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tcl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tc?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtfont?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlead?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlig?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlinecolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlineclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtline?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtshad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tsh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tsz?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtsize?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txttrack?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tt?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtwidth?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        t?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
    } | undefined;
    disableIxlibParam: boolean | undefined;
    secureURLToken: string | undefined;
    sourceType: ImgixSourceType | undefined;
    fields: (({
        nodeType: string;
        fieldName: string;
    } & {
        getURL: Function;
    }) | ({
        nodeType: string;
        fieldName: string;
    } & {
        getURLs: Function;
    }))[] | undefined;
}>, {
    domain: string;
    defaultImgixParams: {
        trim?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        auto?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fill?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blend?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        faces?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        crop?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        hue?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        border?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dpr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        palette?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mask?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        duotone?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blur?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        h?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        transparency?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        invert?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mark?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        monochrome?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txt?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        usm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-crop"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-mode"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fill-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-base"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-scale"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-tile"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mask-bg"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-h"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-w"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        orient?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pdf-annotation"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-md"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-sd"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "trim-tol"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-align"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-clip"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-fit"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-font"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-lead"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-lig"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line-color"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-pad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-shad"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-track"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        w?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ar?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bg?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-bottom"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-left"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-radius-inner"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-radius"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-right"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "border-top"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bri?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ch?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        chromasub?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        colorquant?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        colors?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        con?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "corner-radius"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        cs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        dpi?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "duotone-alpha"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        exp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        expires?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        faceindex?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        facepad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        flip?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-debug"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-x"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-y"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "fp-z"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        gam?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "grid-colors"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "grid-size"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        high?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        htn?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        lossless?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "mark-rot"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        nr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        nrs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-bottom"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-left"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-right"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "pad-top"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        pad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        page?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        prefix?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        px?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        q?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        rect?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        rot?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sat?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sepia?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        shad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        sharp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        usmrad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        vib?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ba?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendalpha?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        balph?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "blend-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendcrop?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bc?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendmode?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bm?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendsize?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bs?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        bx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        blendy?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        by?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        b?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        width?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        fillcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        f?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        height?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        inv?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ma?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markalpha?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        malph?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mb?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markbase?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ms?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markscale?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mtile?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        marktile?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mw?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        markx?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        my?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        marky?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        m?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        maskbg?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-height"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "max-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-height"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "min-width"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        mono?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        or?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        annotation?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimmd?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimsd?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        trimtol?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtalign?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        ta?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtclip?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tcl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtcolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tc?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtfit?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tf?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtfont?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlead?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlig?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlinecolor?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        "txt-line-clr"?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtlineclr?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtline?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tl?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtpad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tp?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtshad?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tsh?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tsz?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtsize?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txttrack?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        tt?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        txtwidth?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
        t?: string | number | boolean | string[] | number[] | boolean[] | null | undefined;
    };
    disableIxlibParam: boolean;
    secureURLToken: string;
    sourceType: ImgixSourceType;
    fields: (({
        nodeType: string;
        fieldName: string;
    } & {
        getURL: Function;
    }) | ({
        nodeType: string;
        fieldName: string;
    } & {
        getURLs: Function;
    }))[];
}, unknown>;
export declare type IImgixGatsbyOptions = t.TypeOf<typeof ImgixGatsbyOptionsIOTS>;
export declare type IImgixGatsbyRootArgs = {
    url: string;
};
declare type ImgixUrlParametersSpec = typeof imgixUrlParameters;
export declare type ImgixUrlParams = Partial<Record<IImgixParamsKey, string | number | boolean | undefined>> & {
    ar?: string;
};
export interface ImgixUrlArgs {
    imgixParams?: ImgixUrlParams;
}
export interface ImgixFluidArgs {
    maxWidth?: number;
    maxHeight?: number;
    srcSetBreakpoints?: number[];
    imgixParams?: ImgixUrlParams;
    placeholderImgixParams?: ImgixUrlParams;
}
export interface ImgixFixedArgs {
    width?: number;
    height?: number;
    quality?: number;
    imgixParams?: ImgixUrlParams;
    placeholderImgixParams?: ImgixUrlParams;
}
export declare type IFieldOption = IFieldOptionsSingleUrl | IFieldOptionsMultipleUrls;
export {};
//# sourceMappingURL=publicTypes.d.ts.map