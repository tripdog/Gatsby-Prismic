import { GatsbyCache } from 'gatsby';
import { EnumTypeComposerAsObjectDefinition, InputTypeComposerAsObjectDefinition, ObjectTypeComposerAsObjectDefinition } from 'graphql-compose';
export declare const ImgixParamsInputType: ({ name, }: {
    name: string;
}) => InputTypeComposerAsObjectDefinition;
export declare const createImgixFluidType: ({ cache, name, }: {
    name: string;
    cache: GatsbyCache;
}) => ObjectTypeComposerAsObjectDefinition<any, any>;
export declare const getImgixFluidType: (args: Parameters<typeof createImgixFluidType>) => ObjectTypeComposerAsObjectDefinition<any, any>;
export declare const createImgixFixedType: ({ name, cache, }: {
    name: string;
    cache: GatsbyCache;
}) => ObjectTypeComposerAsObjectDefinition<any, any>;
export declare const unTransformParams: <T>(params: Record<string, T>) => Record<string, T>;
export declare type IGatsbySourceImgixUrlField = string;
export declare const gatsbySourceImgixUrlFieldType = "String";
export declare const ImgixPlaceholderType: (name: string) => EnumTypeComposerAsObjectDefinition;
//# sourceMappingURL=graphqlTypes.d.ts.map